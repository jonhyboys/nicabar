@using Domain.Products
@using Domain.Categories
@model Domain.Sales.Sale

@{
    ViewData["Title"] = "Venta - Mesa " + ViewData["TableName"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Sales/Sales.css" />
}

<div id="product-container">
    @foreach(Category category in ViewData["CategoryList"] as IEnumerable<Category>)
    {
        IEnumerable<Product> products = ViewData["ProductList"] as IEnumerable<Product>;
        products = products.Where(p => p.Category == category.Id);
        
        <div class="category" data-id="@category.Id">
            <h2>@category.Name<span class="showProducts-button">+</span></h2>
            <ul class="product-list hide">
                @foreach (Product product in products)
                {
                    <li data-id="@product.Id" data-price="@product.Price">
                        <div>@product.Name</div>
                        <div class="counter">
                            <span class="minus-button">-</span>
                            <span>
                                <strong class="to-sale">0</strong>
                                <em class="inventory">100</em>
                            </span>
                            <span class="plus-button">+</span>
                        </div>
                    </li>
                }
            </ul>
        </div>
    }
</div>

<div id="sale-resume" data-table="@Model.Table">
    <h1>Resumen de esta venta</h1>
    <ul></ul>
    <input type="submit" value="Guardar" class="btn btn-primary" id="btn-save" />
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/Sales/Sales.js?V=1.1"></script>
}
